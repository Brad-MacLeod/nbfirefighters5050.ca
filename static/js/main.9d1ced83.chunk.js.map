{"version":3,"sources":["Jackpot.js","Apply.js","App.js","reportWebVitals.js","index.js"],"names":["Jackpot","props","state","lang","jackpot","fetch","then","response","json","jp","setState","data","className","this","drawNum","jackpotDollars","React","Component","Apply","console","log","text","filter","map","title","name","type","mail","facebook","contact","phone","email","rules","terms","term","rule","id","onClick","submit","bind","App","src","process","alt","toggle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d1ced83.chunk.js","sourcesContent":["\nimport './Jackpot.css';\n\nimport React from \"react\";\n\nclass Jackpot extends React.Component {\n  constructor(props) {\n    super(props);\n    //console.log(props)\n    this.state = {lang: props.lang, jackpot: []}\n    \n  }\n\n  \n\n  //Loads the json data now that I switched to react\n  componentDidMount() {\n      fetch('https://api.rafflebox.ca/goldrush-service/ticker/salisburyfire')\n      .then((response) => response.json())\n      .then(jp => {\n          //console.log(jp)\n          this.setState({ jackpot: jp.data });            \n          \n      \n      });\n  }\n\n  render() {\n      \n      return (\n          <div>\n              <div className=\"jackpot_title\">This Weeks 50/50 Jackpot<br/>Draw #{this.state.jackpot.drawNum}</div>\n              <div className=\"jackpot_amt_container\"><div className=\"jackpot_amt\">${this.state.jackpot.jackpotDollars}</div></div>\n          </div>\n      )\n  }\n}\n\nexport default Jackpot;\n","\nimport './Apply.css';\nimport data from './data/apply.json';\n\nimport React from \"react\";\n\nclass Apply extends React.Component {\n    submit() {\n        console.log(\"Something\")\n    }\n    render() {\n        return (\n            <form>\n                {data.text\n                    .filter(text => text.lang === this.props.lang)\n                    .map((text) => (      \n                        <div className=\"apply-app\">      \n                            <div className=\"apply-title\">{text.title}</div>\n                            <div className=\"apply-name\">{text.name}: <input type=\"text\" className=\"apply-name-input\"></input></div>\n                            <div className=\"apply-mail\">{text.mail}: <input type=\"text\"  className=\"apply-mail-input\"></input></div>\n                            <div className=\"apply-facebook\">{text.facebook}: <input type=\"text\"  className=\"apply-facebook-input\"></input></div>\n                            {\n                                text.contact.map((contact) => (\n                                    <div>\n                                        <br/>\n                                        <div>\n                                            <div className=\"apply-contact-name\">{contact.name}: <input type=\"text\"  className=\"apply-contact-name-input\"></input></div>\n                                            <div className=\"apply-contact-title\">{contact.title}: <input type=\"text\"  className=\"apply-contact-title-input\"></input></div>\n                                        </div>\n                                        <div>\n                                            <div className=\"apply-contact-phone\">{contact.phone}: <input type=\"text\"  className=\"apply-contact-phone-input\"></input></div>\n                                            <div className=\"apply-contact-email\">{contact.email}: <input type=\"text\"  className=\"apply-contact-email-input\"></input></div>\n                                        </div>\n                                    </div>\n                                ))\n                            }\n                            <br/>\n                            <div className=\"apply-rules\">{text.rules}: </div>\n                            <div className=\"apply-terms\">\n                            {\n                                text.terms.map((term) => (                                \n                                    <li>{term.rule}</li>                                   \n                                    \n                                ))\n                            }\n                            </div>\n                            <button id=\"Apply-Submit\" onClick={this.submit.bind(this)}>Submit</button>\n                        </div>\n                    ))\n                }\n                \n            </form>\n      )\n  }\n}\n\nexport default Apply;\n","\nimport React from 'react';\nimport './App.css';\nimport Jackpot from './Jackpot';\nimport Apply from './Apply';\n\n\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    //console.log(props)\n    this.state = {lang: props.lang}    \n  }\n\n  toggle() {\n    \n    let lang;\n    (this.state.lang !== \"en\"?\n      lang = \"en\"\n    :\n      lang = \"fr\"\n    )\n    console.log(lang)\n    this.setState({lang: lang})\n}\n\n\n\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div>\n            <div className=\"App-Logo\"><img src={process.env.PUBLIC_URL + '/images/NBFD Logo.png'} className=\"App-Logo-img\" alt=\"NBFF\"/></div>\n            <div className=\"App-title-container\">\n              <div className=\"App-Title\">New Brunswick Firefighters 50/50</div>\n              <div className=\"App-Menu\">About - Jackpot - Past Winner - Rules - Apply - Language:<button id=\"App-Menu-Lang\" onClick={this.toggle.bind(this)}>{this.state.lang}</button></div>          \n            </div>\n          </div>\n        </header>\n        <div className=\"App-container\">\n          \n          <div className=\"App-Jackpot\"><Jackpot lang={this.state.lang}/></div>\n          <div className=\"App-Past-Winner\"></div>\n          <div className=\"App-Rules\"></div>\n          <div className=\"App-Apply\"><Apply lang={this.state.lang}/></div>\n          \n        </div>\n      </div>\n    );\n  }\n}\n\n// - Language:<button id=\"App-Menu-Lang\" onClick={this.toggle.bind(this)}>{this.state.lang}</button>\n// add this to the menu in the future\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App lang=\"en\"/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}